#user  nobody;

error_log  logs/game.log  notice;

pid        logs/game.pid;

worker_processes  1;

events {
    worker_connections  1024;
} 

stream {

    tcp_nodelay on;
    # lua_package_path '/home/majiang_xianlaiyouxi/hall/Alloc/SiGuoTang/?.lua;;';

    # lua_socket_connect_timeout 3s;
    # lua_socket_read_timeout 3s;
    # lua_socket_buffer_size 8K;
    lua_shared_dict AllocSendTaskQuene 2m;
    lua_socket_log_errors off;
    lua_socket_keepalive_timeout 3600s;

    init_by_lua_block {

        require("lib.init") --初始化全局方法
        local pDBClient = require("game.Tools.DbPart"):Init()
        local pRedisManagerClient = require("game.Tools.RedisManagerClient"):Init()
        local Http  = require("game.Tools.Http"):getInstance()
        GameServer = require("game.Tools.GameServer").new(pDBClient , pRedisManagerClient , Http , Timer)

    }

    init_worker_by_lua_block {
      
          local function main()
            Print("init_worker_by_lua!!!!!")
            GameServer:InitConnect()
        end

        ngx.timer.at(0, main)
    }

    server {

        # lua_code_cache off; #lua代码缓存,开发期间为off,上线后改为on

        listen 8888 so_keepalive=on; 

        resolver 8.8.8.8;

        content_by_lua_block {

            local CliSocketHandle = require("lib.CliSocketHandle")
            
            local CProcessPacket = require("Socket.ProcessPacket")

            Print("user rquest come !!!!!!!!!!!!!!!!")

            ngx.thread.spawn(function()
                --打开一个与客户端的新连接
                CliSocketHandle.new(CProcessPacket)
            end)
          
        } 

    }

}
